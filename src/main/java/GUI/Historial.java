/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import Entidades.Licencia;
import Entidades.Persona;
import Entidades.Placa;
import Entidades.Tramite;
import Persistencia.ITramiteDAO;
import Utilidades.EncriptacionUtils;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 * Clase para el historial
 *
 * @author IVAN
 */
public class Historial extends javax.swing.JFrame {

    /**
     * Objetivo de tipo persona
     */
    private Persona persona;

    /**
     * objeto de tipo tramite dao
     */
    private ITramiteDAO tramite;

    /**
     * atributo que representa el tipo
     */
    private String tipot = "";

    /**
     * Constructor de la clase Historial. Crea una nueva instancia de la ventana
     * Historial con la persona y el objeto ITramiteDAO como parámetros.
     * Inicializa los componentes de la ventana y llena la tabla con los datos
     * de los trámites realizados por la persona.
     *
     * @param persona Objeto de la clase Persona que representa la persona para
     * la cual se mostrará el historial de trámites.
     * @param tramite Objeto de la interfaz ITramiteDAO que permite acceder a
     * los datos de los trámites en la base de datos.
     */
    public Historial(Persona persona, ITramiteDAO tramite) {
        this.persona = persona;
        this.tramite = tramite;

        initComponents();

        llenarTabla();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtHistorial = new javax.swing.JTable();
        btnVolver1 = new javax.swing.JButton();
        btnLicencia = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtFechaInicio = new com.toedter.calendar.JDateChooser();
        txtFechaFin = new com.toedter.calendar.JDateChooser();
        btnllenar = new javax.swing.JButton();
        btnPlacas = new javax.swing.JButton();
        btnlimpiar = new javax.swing.JButton();
        btnFecha = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 102, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Historial individual");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 20, 350, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1040, 70));

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(0, 102, 204));
        jLabel6.setText("A:");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 160, -1, -1));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));

        jtHistorial.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nombre", "Tipo tramite", "Precio", "Fecha"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jtHistorial);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 280, 990, 280));

        btnVolver1.setBackground(new java.awt.Color(0, 102, 204));
        btnVolver1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnVolver1.setForeground(new java.awt.Color(255, 255, 255));
        btnVolver1.setText("Volver");
        btnVolver1.setBorder(null);
        btnVolver1.setContentAreaFilled(false);
        btnVolver1.setOpaque(true);
        btnVolver1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVolver1ActionPerformed(evt);
            }
        });
        jPanel1.add(btnVolver1, new org.netbeans.lib.awtextra.AbsoluteConstraints(880, 590, 88, 37));

        btnLicencia.setBackground(new java.awt.Color(0, 102, 204));
        btnLicencia.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnLicencia.setForeground(new java.awt.Color(255, 255, 255));
        btnLicencia.setText("Licencia");
        btnLicencia.setBorder(null);
        btnLicencia.setContentAreaFilled(false);
        btnLicencia.setOpaque(true);
        btnLicencia.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLicenciaActionPerformed(evt);
            }
        });
        jPanel1.add(btnLicencia, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 160, 80, 30));

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 204));
        jLabel7.setText("Filtrar por tipo de tramite:");
        jPanel1.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 110, -1, -1));

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 204));
        jLabel8.setText("Filtrar por fecha:");
        jPanel1.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 110, -1, -1));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 204));
        jLabel9.setText("De:");
        jPanel1.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 160, -1, -1));

        txtFechaInicio.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));
        jPanel1.add(txtFechaInicio, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 160, 240, -1));

        txtFechaFin.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 51, 204)));
        jPanel1.add(txtFechaFin, new org.netbeans.lib.awtextra.AbsoluteConstraints(740, 160, 280, -1));

        btnllenar.setBackground(new java.awt.Color(0, 102, 204));
        btnllenar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnllenar.setForeground(new java.awt.Color(255, 255, 255));
        btnllenar.setText("llenar");
        btnllenar.setBorder(null);
        btnllenar.setContentAreaFilled(false);
        btnllenar.setOpaque(true);
        btnllenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnllenarActionPerformed(evt);
            }
        });
        jPanel1.add(btnllenar, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 590, 88, 37));

        btnPlacas.setBackground(new java.awt.Color(0, 102, 204));
        btnPlacas.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnPlacas.setForeground(new java.awt.Color(255, 255, 255));
        btnPlacas.setText("Placas");
        btnPlacas.setBorder(null);
        btnPlacas.setContentAreaFilled(false);
        btnPlacas.setOpaque(true);
        btnPlacas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPlacasActionPerformed(evt);
            }
        });
        jPanel1.add(btnPlacas, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 160, 88, 30));

        btnlimpiar.setBackground(new java.awt.Color(0, 102, 204));
        btnlimpiar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnlimpiar.setForeground(new java.awt.Color(255, 255, 255));
        btnlimpiar.setText("limpiar");
        btnlimpiar.setBorder(null);
        btnlimpiar.setContentAreaFilled(false);
        btnlimpiar.setOpaque(true);
        btnlimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnlimpiarActionPerformed(evt);
            }
        });
        jPanel1.add(btnlimpiar, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 590, 88, 37));

        btnFecha.setBackground(new java.awt.Color(0, 102, 204));
        btnFecha.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnFecha.setForeground(new java.awt.Color(255, 255, 255));
        btnFecha.setText("Filtrar por fechas");
        btnFecha.setBorder(null);
        btnFecha.setContentAreaFilled(false);
        btnFecha.setOpaque(true);
        btnFecha.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFechaActionPerformed(evt);
            }
        });
        jPanel1.add(btnFecha, new org.netbeans.lib.awtextra.AbsoluteConstraints(610, 200, 180, 37));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 650, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Acción realizada al hacer clic en el botón "Volver" en la ventana
     * Historial. Crea una nueva instancia de la ventana Menu con la persona
     * como parámetro, la hace visible y cierra la ventana Historial actual.
     *
     * @param evt Objeto de la clase ActionEvent que representa el evento de
     * clic en el botón "Volver".
     */
    private void btnVolver1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVolver1ActionPerformed

        Menu m = new Menu(persona);
        m.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnVolver1ActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Llenar" en la ventana
     * Historial. Limpia la tabla de historial de trámites, y luego la llena con
     * los datos actualizados.
     *
     * @param evt Objeto de la clase ActionEvent que representa el evento de
     * clic en el botón "Llenar".
     */
    private void btnllenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnllenarActionPerformed
        limpiarTabla();
        llenarTabla();
    }//GEN-LAST:event_btnllenarActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Limpiar" en la ventana
     * Historial. Limpia la tabla de historial de trámites.
     *
     * @param evt Objeto de la clase ActionEvent que representa el evento de
     * clic en el botón "Limpiar".
     */
    private void btnlimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnlimpiarActionPerformed
        limpiarTabla();
    }//GEN-LAST:event_btnlimpiarActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Placas" en la ventana
     * Historial. Limpia la tabla de historial de trámites, y luego la llena con
     * los datos de trámites que corresponden a "Placa" como tipo de trámite.
     *
     * @param evt Objeto de la clase ActionEvent que representa el evento de
     * clic en el botón "Placas".
     */
    private void btnPlacasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPlacasActionPerformed
        limpiarTabla();
        tipot = "Placa";
        llenarTablaTipo();
    }//GEN-LAST:event_btnPlacasActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Licencia" en la ventana
     * Historial. Limpia la tabla de historial de trámites, y luego la llena con
     * los datos de trámites que corresponden a "Licencia" como tipo de trámite.
     *
     * @param evt Objeto de la clase ActionEvent que representa el evento de
     * clic en el botón "Licencia".
     */
    private void btnLicenciaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLicenciaActionPerformed
        limpiarTabla();
        tipot = "Licencia";
        llenarTablaTipo();
    }//GEN-LAST:event_btnLicenciaActionPerformed
    /**
     * Acción realizada al hacer clic en el botón "Fecha" en la ventana
     * Historial. Limpia la tabla de historial de trámites, y luego la llena con
     * los datos de trámites que corresponden al rango de fechas seleccionado.
     * Muestra un mensaje de error si no se han seleccionado ambas fechas.
     *
     * @param evt Objeto de la clase ActionEvent que representa el evento de
     * clic en el botón "Fecha".
     */
    private void btnFechaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFechaActionPerformed

        if (txtFechaInicio.getDate() != null && txtFechaFin.getDate() != null) {
            limpiarTabla();
            llenarTablaFechas();
        } else {
            JOptionPane.showMessageDialog(null, "Favor de llenar las fechas");
        }

    }//GEN-LAST:event_btnFechaActionPerformed
    /**
     * Limpia la tabla de historial de trámites.
     *
     * @see DefaultTableModel
     */
    public void limpiarTabla() {
        DefaultTableModel modelo = (DefaultTableModel) jtHistorial.getModel();
        modelo.setRowCount(0);
        jtHistorial.repaint();

    }

    /**
     * Llena la tabla jtHistorial con los datos de los trámites realizados por
     * la persona actual.
     */
    public void llenarTabla() {

        List<Tramite> tramites = tramite.tramitesPersona(persona.getId_persona());

        DefaultTableModel modelo = (DefaultTableModel) jtHistorial.getModel();

        for (Tramite tramite : tramites) {

            String nombreEncriptado = tramite.getPersona().getNombre();
            String nombre = EncriptacionUtils.desencriptarNombre(nombreEncriptado);
            String tipoTramite;
            int precio = tramite.getPrecio();
            String fecha = tramite.getFecha_solicitud().toString();

            if (tramite instanceof Placa) {
                tipot = "Placa";
            } else if (tramite instanceof Licencia) {
                tipot = "Licencia";
            } else {
                tipot = "baja"; // Agrega un valor por defecto si no es Placa ni Licencia
            }

            modelo.addRow(new Object[]{nombre, tipot, precio, fecha});
        }

    }

    /**
     * Llena la tabla jtHistorial con los datos de los trámites de un tipo
     * específico (Placa o Licencia) realizados por la persona actual.
     */
    public void llenarTablaTipo() {

        DefaultTableModel modelo = (DefaultTableModel) jtHistorial.getModel();
        List<Tramite> tramites = tramite.tramitesPersonaP(persona.getId_persona(), tipot);

        for (Tramite tramite : tramites) {
            String nombreEncriptado = tramite.getPersona().getNombre();
            String nombre = EncriptacionUtils.desencriptarNombre(nombreEncriptado);
            int precio = tramite.getPrecio();
            String fecha = tramite.getFecha_solicitud().toString();

            modelo.addRow(new Object[]{nombre, tipot, precio, fecha});

        }
    }

    /**
     * Llena la tabla jtHistorial con los datos de los trámites realizados por
     * la persona actual dentro de un rango de fechas específico.
     */
    public void llenarTablaFechas() {
        long date = this.txtFechaInicio.getDate().getTime();
        java.sql.Date fechaInicioDate = new java.sql.Date(date);

        long date2 = this.txtFechaFin.getDate().getTime();
        java.sql.Date fechaFin = new java.sql.Date(date2);

        List<Tramite> tramites = tramite.tramitesPersonaEnRangoFechas(persona.getId_persona(), fechaInicioDate, fechaFin);
        DefaultTableModel modelo = (DefaultTableModel) jtHistorial.getModel();
        System.out.println(tramites.size());

        for (Tramite tramite : tramites) {
            String nombreEncriptado = tramite.getPersona().getNombre();
            String nombre = EncriptacionUtils.desencriptarNombre(nombreEncriptado);
            String tipoTramite = null;
            int precio = tramite.getPrecio();
            String fecha = tramite.getFecha_solicitud().toString();

            if (tramite instanceof Placa) {
                tipoTramite = "Placa";
            } else if (tramite instanceof Licencia) {
                tipoTramite = "Licencia";
            }

            modelo.addRow(new Object[]{nombre, tipoTramite, precio, fecha});
        }

    }

    /**
     * Elementos del frame
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFecha;
    private javax.swing.JButton btnLicencia;
    private javax.swing.JButton btnPlacas;
    private javax.swing.JButton btnVolver1;
    private javax.swing.JButton btnlimpiar;
    private javax.swing.JButton btnllenar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtHistorial;
    private com.toedter.calendar.JDateChooser txtFechaFin;
    private com.toedter.calendar.JDateChooser txtFechaInicio;
    // End of variables declaration//GEN-END:variables
}
